{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/admin/get-contacts/get-contacts.component.ts","./src/app/admin/get-contacts/get-contacts.component.html","./src/app/admin/get-users/get-users.component.ts","./src/app/admin/get-users/get-users.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/product-create/product-create.component.ts","./src/app/components/product-create/product-create.component.html","./src/app/components/product-details/product-details.component.ts","./src/app/components/product-list/product-list.component.ts","./src/app/components/product-list/product-list.component.html","./src/app/edit-contact/edit-contact.component.ts","./src/app/edit-contact/edit-contact.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/services/contacts.service.ts","./src/app/services/product.service.ts","./src/app/services/users.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>admin works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ContactsService } from 'src/app/services/contacts.service';\n\n@Component({\n  selector: 'app-get-contacts',\n  templateUrl: './get-contacts.component.html',\n  styleUrls: ['./get-contacts.component.css']\n})\nexport class GetContactsComponent implements OnInit {\n  msg=\"\"\n  contacts=[]\n  constructor(private ps:ContactsService) { \n    this.ps.allContacts().then(result=>{\n      this.contacts=result\n\n    }).catch(err=>{\n      this.msg=\"error when loading contacts data \\n\" + err\n    })\n  }\n  // product-get.component.ts\n\ndeleteContact(id) {\n  this.ps.deleteContact(id).subscribe(res => {\n    this.contacts.splice(id, 1);\n  });\n}\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>List of Contacts</h2>\n<span>{{msg}}</span>\n<table class=\"table table-hover\">\n    <thead>\n         <th>Employee ID</th>\n        <th>Name</th>\n        <th>Number</th>\n        <th >Job</th>\n        <th>Location</th>\n        <th colspan=\"2\"> Action</th>\n        \n    </thead>\n    <tbody>\n        <tr *ngFor=\"let contact of contacts\">\n        <th >{{contact._id}}</th>\n        <td>{{contact.name}}</td>\n        <td>{{contact.number}}</td>\n        <td >{{contact.job}}</td>\n        <td>{{contact.location}}</td>\n\n        <span class=\"edit\" [routerLink]=\"['edit', contact._id]\">         \n            <button type=\"button\" class=\"btn btn-success btn-sm\">Edit</button>\n        </span>\n\n        <span class=\"delete\" > \n            <button type=\"button\" (click) = \"deleteContact(contact._id)\" class=\"btn btn-danger btn-sm\">Delete</button>\n        </span>\n      \n        </tr>\n    </tbody>\n\n</table>\n","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from 'src/app/services/users.service';\n\n@Component({\n  selector: 'app-get-users',\n  templateUrl: './get-users.component.html',\n  styleUrls: ['./get-users.component.css']\n})\nexport class GetUsersComponent implements OnInit {\nmsg=\"\"\nusers=[]\n  constructor(private us:UsersService) {\n    this.us.allUsers().then(result=>{\n      this.users=result\n\n    }).catch(err=>{\n      this.msg=\"error when loading user data \\n\" + err\n    })\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>List of Users</h2>\n<span>{{msg}}</span>\n<table class=\"table table-hover\">\n    <thead>\n        <th>Userame</th>\n        <th>Email</th>\n        <th >Actions</th>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.email}}</td>\n            <td ><a href=\"#\" class=\"btn btn-danger\">Block</a></td>\n        </tr>\n    </tbody>\n\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AdminComponent } from './admin/admin.component';\nimport { GetContactsComponent } from './admin/get-contacts/get-contacts.component';\nimport { GetUsersComponent } from './admin/get-users/get-users.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport {EditContactComponent} from './edit-contact/edit-contact.component';\n\n\nconst routes: Routes = [\n  { path: 'products', component: ProductListComponent },\n  { path: 'products/:id', component: ProductDetailsComponent },\n  { path: 'create', component: ProductCreateComponent },\n  {\n    path:'signup',\n    component:SignupComponent\n  },\n  {\n    path:'login',\n    component:LoginComponent\n  },\n  {\n    path:'',\n    component:HomeComponent\n  },\n  {\n    path:'admin',\n    component:AdminComponent\n  },\n  {\n    path:'admin/listusers',\n    component:GetUsersComponent\n  },\n  {\n    path:'admin/listcontacts',\n    component:GetContactsComponent\n  },\n  {\n    path: 'edit',\n    component: EditContactComponent\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'phone-book-number';\n  userAuthenticated = localStorage.getItem(\"token\");\n  isAdmin = localStorage.getItem(\"username\")==\"admin\"\n\n  constructor(){\n    \n  }\n}\n","<nav class=\"navbar navbar-expand-sm bg-danger\">\n  <div class=\"container-fluid\">\n  <div id=\"userNavigation\" *ngIf=\"!isAdmin; else adminNavigation\">\n      <ul class=\"navbar-nav\" >\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"/\" routerLinkActive=\"active\">Home</a>\n      </li>\n    <div id=\"unauth\" *ngIf=\"userAuthenticated==null;else auth\" class=\"navbar-nav\"> \n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"signup\"> Sign Up</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"login\">Login</a>\n      </li>\n\n    </div>\n    <ng-template #auth>\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"login\">Logout</a>\n      </li>\n      \n\n    </ng-template>\n    \n      </ul>\n  </div>\n  </div>\n  <ng-template id=\"adminNavigation\" #adminNavigation>\n   \n    <ul class=\"navbar-nav\" >\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"/\" routerLinkActive=\"active\">Admin page</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"admin/listusers\">Users</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"admin/listcontacts\">Contacts</a>\n      \n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"products\" class=\"nav-link\">contact</a>\n      </li>\n      <li class=\"nav-item\">\n        <a routerLink=\"create\" class=\"nav-link\">CreateContact</a>\n      </li>\n    \n      <li class=\"nav-item\">\n        <a class=\" nav-link text-light\" routerLink=\"login\">Logout</a>\n      </li>\n      </ul>\n    </ng-template>\n</nav>\n\n<div class=\"container\">\n<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\r\nimport{HttpClientModule} from '@angular/common/http';\r\nimport{UsersService} from './services/users.service';\r\nimport { GetUsersComponent } from './admin/get-users/get-users.component';\r\nimport { GetContactsComponent } from './admin/get-contacts/get-contacts.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ProductCreateComponent } from './components/product-create/product-create.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\nimport { EditContactComponent } from './edit-contact/edit-contact.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignupComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    GetUsersComponent,\r\n    GetContactsComponent,\r\n    AdminComponent,\r\n    ProductCreateComponent,\r\n    ProductListComponent,\r\n    EditContactComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [UsersService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport{FormGroup,FormBuilder,Validators,FormControl} from '@angular/forms';\nimport{ContactsService} from \"../../services/contacts.service\";\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\nexport class ProductCreateComponent implements OnInit {\n  \n  \n\n  constructor( private us:ContactsService) { }\n  \n\nmsg = new FormControl(\"\");\n\naddContact(name,number,job,location){\n  //logic\n\n  this.us.addContact(name,number,job,location)\n  // .then(resp=>{\n  //   if(resp['success']){\n  //     localStorage.setItem(\"token\",resp['token']);\n  //     this.msg.setValue(\"User Added Successfully\");\n      \n  //   }\n  // }).catch(err=>{\n  //  this.msg.setValue(\"Error:\" + err.message);\n  // })\n}\n\n  ngOnInit(): void {\n  }\n\n  \n\n  // createProduct(): void {\n  //   const data = {\n  //     name: this.product.name,\n  //     number: this.product.number,\n  //     job:this.product.job,\n  //     location:this.product.location\n  //   };\n\n  //   this.productService.create(data)\n  //     .subscribe(\n  //       response => {\n  //         console.log(response);\n  //         this.submitted = true;\n  //       },\n  //       error => {\n  //         console.log(error);\n  //       });\n  // }\n\n  // newProduct(): void {\n  //   this.submitted = false;\n  //   this.product = {\n  //     name: '',\n  //     number: '',\n  //     job:'',\n  //     location:''\n  //   };\n  // }\n\n}","<h2>signup for free</h2>\n<div class=\"card\" style=\"width: 100%;\">\n    <div class=\"card-body\">\n      <form  ><!--  [formGroup]=\"signUpForm\" -->\n        <div class=\"form-group\">\n          <label for=\"name\">name :</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" \n           #name required>\n          <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">plese enter your full name .</small> -->\n          \n        </div>\n        <div class=\"form-group\">\n          <label for=\"number\">number :</label>\n          <input type=\"number\" class=\"form-control\" id=\"number\"  #number required>\n          \n        </div>\n        <div class=\"form-group\">\n            <label for=\"job\">job :</label>\n            <input type=\"text\" class=\"form-control\" id=\"job\" \n            #job required>\n            <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">plese enter your full name .</small> -->\n            \n           \n  \n          </div>\n          <div class=\"form-group\">\n            <label for=\"location\">location :</label>\n            <input type=\"text\" class=\"form-control\" id=\"location\" \n             #location required>\n            <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">plese enter your full name .</small> -->\n            \n           \n  \n          </div>\n        \n        \n        <div class=\"form-group\">\n          <input type=\"submit\"   \n          class=\"form-control btn btn-primary\" value=\"Add\"\n          (click)=\"addContact(name.value,number.value,job.value,location.value)\"/>\n          <span class=\"alert-danger\">{{msg.value}}</span>\n        </div>\n        \n      </form>\n    </div>\n  </div>\n  \n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-details',\n  templateUrl: './product-details.component.html',\n  styleUrls: ['./product-details.component.css']\n})\nexport class ProductDetailsComponent implements OnInit {\n  currentProduct = null;\n  message = '';\n\n  constructor(\n    private productService: ProductService,\n    private route: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.message = '';\n    this.getProduct(this.route.snapshot.paramMap.get('id'));\n  }\n\n  getProduct(id): void {\n    this.productService.read(id)\n      .subscribe(\n        product => {\n          this.currentProduct = product;\n          console.log(product);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  setAvailableStatus(status): void {\n    const data = {\n      name: this.currentProduct.name,\n      number: this.currentProduct.number,\n      job:this.currentProduct.job,\n      location:this.currentProduct.location\n    };\n\n    this.productService.update(this.currentProduct.id, data)\n      .subscribe(\n        response => {\n          this.currentProduct.available = status;\n          console.log(response);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  updateProduct(): void {\n    this.productService.update(this.currentProduct.id, this.currentProduct)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.message = 'The product was updated!';\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  deleteProduct(): void {\n    this.productService.delete(this.currentProduct.id)\n      .subscribe(\n        response => {\n          console.log(response);\n          this.router.navigate(['/products']);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from 'src/app/services/product.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\nexport class ProductListComponent implements OnInit {\n\n  products: any;\n  currentProduct = null;\n  currentIndex = -1;\n  name = '';\n\n  constructor(private productService: ProductService) { }\n\n  ngOnInit(): void {\n    this.readProducts();\n  }\n\n  readProducts(): void {\n    this.productService.readAll()\n      .subscribe(\n        products => {\n          this.products = products;\n          console.log(products);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  refresh(): void {\n    this.readProducts();\n    this.currentProduct = null;\n    this.currentIndex = -1;\n  }\n\n  setCurrentProduct(product, index): void {\n    this.currentProduct = product;\n    this.currentIndex = index;\n  }\n\n  deleteAllProducts(): void {\n    this.productService.deleteAll()\n      .subscribe(\n        response => {\n          console.log(response);\n          this.readProducts();\n        },\n        error => {\n          console.log(error);\n        });\n  }\n\n  searchByName(): void {\n    this.productService.searchByName(this.name)\n      .subscribe(\n        products => {\n          this.products = products;\n          console.log(products);\n        },\n        error => {\n          console.log(error);\n        });\n  }\n}\n","<div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-4\">\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          placeholder=\"Search by name\"\n          [(ngModel)]=\"name\"\n        />\n        <div class=\"input-group-append\">\n          <button\n            class=\"btn btn-outline-secondary\"\n            type=\"button\"\n            (click)=\"searchByName()\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-md-6\">\n      <h4>Product List</h4>\n      <ul class=\"list-group\">\n        <li\n          class=\"list-group-item\"\n          *ngFor=\"let product of products; let i = index\"\n          [class.active]=\"i == currentIndex\"\n          (click)=\"setCurrentProduct(product, i)\"\n        >\n  \n        </li>\n      </ul>\n  \n      <button class=\"m-4 btn btn-sm btn-danger\" (click)=\"deleteAllProducts()\">\n        Delete All\n      </button>\n    </div>\n    <div class=\"col-md-6\">\n      <div *ngIf=\"currentProduct\">\n        <h4>Product</h4>\n        <div>\n          <label><strong>Name:</strong></label> \n        </div>\n        <div>\n          <label><strong>Number:</strong></label>\n  \n        </div>\n        <div>\n          <label><strong>Job:</strong></label>\n  \n        </div>\n        <div>\n            <label><strong>Location:</strong></label>\n    \n          </div>\n  \n        <a class=\"badge badge-warning\" routerLink=\"/products/\">\n          Edit\n        </a>\n      </div>\n  \n      <div *ngIf=\"!currentProduct\">\n        <br />\n        <p>Please click on a product</p>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport{ContactsService} from \"../services/contacts.service\";\n@Component({\n  selector: 'app-edit-contact',\n  templateUrl: './edit-contact.component.html',\n  styleUrls: ['./edit-contact.component.css']\n})\nexport class EditContactComponent implements OnInit {\n  angForm: FormGroup;\n  contact: any = {};\n\n  constructor(private route: ActivatedRoute, private router: Router, private ps: ContactsService, private fb: FormBuilder) {\n    this.createForm();\n   }\n\n   createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      number: ['', Validators.required ],\n      job: ['', Validators.required ],\n      location: ['',Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.ps.editContact(params.id).subscribe(res => {\n        this.contact = res;\n    });\n  });\n  }\n\n  updateContact(name, number, job,location) {\n    this.route.params.subscribe(params => {\n      this.ps.updateContact(name, number, job ,location, params.id);\n      this.router.navigate(['contacts']);\n    });\n  }\n\n \n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"angForm\" novalidate>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">Name</label>\n          <input type=\"text\" class=\"form-control\" \n            formControlName=\"name\" \n            #name \n            [(ngModel)] = \"contact.name\"/>\n        </div>\n        <div *ngIf=\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['name'].errors.required\">\n            Contact Name is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">Contact number </label>\n          <input class=\"form-control\" type=\"number\" \n          formControlName=\"number\" \n          #number [(ngModel)] = \"contact.number\">/>\n        </div>\n        <div *ngIf=\"angForm.controls['number'].invalid && (angForm.controls['number'].dirty || angForm.controls['number'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['number'].errors.required\">\n            Contact number is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n          <label class=\"col-md-4\">Contact Job</label>\n          <input type=\"text\" class=\"form-control\" \n            formControlName=\"job\" \n            #job\n            [(ngModel)] = \"contact.job\"\n          />\n        </div>\n        <div *ngIf=\"angForm.controls['job'].invalid && (angForm.controls['job'].dirty || angForm.controls['job'].touched)\" class=\"alert alert-danger\">\n          <div *ngIf=\"angForm.controls['job'].errors.required\">\n            Contact Job is required.\n          </div>\n        </div>\n        <div class=\"form-group\">\n            <label class=\"col-md-4\">Contact Location</label>\n            <input type=\"text\" class=\"form-control\" \n              formControlName=\"location\" \n              #location\n              [(ngModel)] = \"contact.location\"\n            />\n          </div>\n          <div *ngIf=\"angForm.controls['location'].invalid && (angForm.controls['location'].dirty || angForm.controls['location'].touched)\" class=\"alert alert-danger\">\n            <div *ngIf=\"angForm.controls['location'].errors.required\">\n              Contact Location is required.\n            </div>\n          </div>\n        <div class=\"form-group\">\n            \n          <button (click) = \"updateContact(name.value, number.value, job.value,location.value)\" type=\"submit\" class=\"btn btn-primary\"\n          [disabled]=\"angForm.invalid\" >\n            Update Contact\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {FormGroup,FormControl,FormBuilder,Validators} from '@angular/forms';\nimport {UsersService} from '../services/users.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm:FormGroup;\n  msg = new FormControl(\"\");\n\n  constructor(private fb:FormBuilder, \n    private us:UsersService,\n    private route:Router) { \n      if(localStorage.getItem(\"token\")==null){\n        //login\n        this.createForm();\n      }else{\n        //logout\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"username\");\n        this.route.navigate([\"/\"]);\n        //refresh page\n        window.open(\"/\",\"_self\");\n      }\n    \n  }\n\n\n  createForm() {\n    this.loginForm = this.fb.group({\n      username :['',Validators.required],\n      password :['',Validators.compose([\n        Validators.required,\n        Validators.minLength(5),\n        Validators.pattern(/\\w{5,14}/)\n      ])],\n    }\n    );//loginform controls/validation \n  } \n\n  login(username,password){\n    //logic\n    this.us.login(username,password)\n    .then(resp=>{\n      if(resp['success']){\n        localStorage.setItem(\"token\",resp['token']);\n        localStorage.setItem(\"username\",username);\n        if(username==\"admn\"){\n          this.route.navigate(['/admin']);\n          window.open(\"/admin\",\"_self\");\n        }else\n        this.route.navigate(['/'])\n         //refresh page\n         window.open(\"/\",\"_self\");\n        //this.msg.setValue(\"Login Successfully\");\n      }else{\n        this.msg.setValue(\"username or password incorrect\");\n      }\n    }).catch(err=>{\n     this.msg.setValue(\"Error:\" + err.message);\n    })\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Login Member</h2>\n<div class=\"card\" style=\"width: 100%;\">\n    <div class=\"card-body\">\n      <form [formGroup]=\"loginForm\"><!--  [formGroup]=\"loginForm\" -->\n        <div class=\"form-group\">\n          <label for=\"username\">Userame :</label>\n          <input type=\"text\" class=\"form-control\" id=\"username\" \n          formControlName=\"username\" #username required>\n          <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">plese enter your full name .</small> -->\n          <div *ngIf=\"loginForm.controls['username'].invalid && (loginForm.controls['username'].dirty || \n          loginForm.controls['username'].touched)\" class=\"alert alert-info\">\n          username is required.\n        </div> \n        </div>\n        <div class=\"form-group\">\n          <label for=\"password\">Password :</label>\n          <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" #password required>\n          <div *ngIf=\"loginForm.controls['password'].invalid && (loginForm.controls['password'].dirty || \n          loginForm.controls['password'].touched)\" class=\"alert alert-info\">\n           <span *ngIf=\"loginForm.controls['password'].errors.required\">password is required</span>\n           <span *ngIf=\"loginForm.controls['password'].errors.minlength\">password length must be min 5 at less</span>\n           <span *ngIf=\"loginForm.controls['password'].errors.pattern\">password must be </span>\n        </div>\n        </div>\n        \n        <div class=\"form-group\">\n          <input type=\"submit\" [disabled]=\"loginForm.pristine || loginForm.invalid\"  \n          class=\"form-control btn btn-primary\" value=\"Login\"\n          (click)=\"login(username.value,password.value)\"/>\n          <span class=\"alert-danger\">{{msg.value}}</span>\n        </div>\n        \n      </form>\n    </div>\n  </div>\n  \n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders,HttpResponse,HttpHandler,} from \"@angular/common/http\";\nimport Contacts from '../models/Contacts.model';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ContactsService {\napi = \"http://localhost:3007/contacts\";\n  constructor(private http:HttpClient) { }\n\n  allContacts(){\n    let headersVal = new HttpHeaders()\n    .set(\"x-auth-token\",localStorage.getItem(\"token\"));\n    \n    return this.http.get<Contacts[]>(this.api,{headers:headersVal}).toPromise();\n  }\n\n  // deleteContact(id) {\n  //   let headersVal = new HttpHeaders()\n  //   .set(\"x-auth-token\",localStorage.getItem(\"token\"));\n  //   //let url = `${this.baseUri}/delete/${id}`;\n  //   return this.http.delete(this.api+\":id\", { headers:headersVal }).toPromise();\n  // }\n\n  // addContact(name,number,job,location){\n  //   //call api\n\n  //   const contact ={\n  //     name:name,\n  //     number:number,\n  //     job:job,\n  //     location:location\n  //   };\n\n  //   return this.http.post(this.api,contact,{}).toPromise();\n\n  // }\n\n\n\n  addContact(name, number, job,location) {\n    console.log(name, number, job,location);\n    const obj = {\n      name, number, job,location\n    };\n    this.http.post(`${this.api}`, obj)\n        .subscribe(res => console.log('Done'));\n  }\n\n  getContacts() {\n    return this\n           .http\n           .get(`${this.api}`);\n  }\n\n  editContact(id) {\n    return this\n            .http\n            .get(`${this.api}/${id}`);\n  }\n\n  updateContact(name, number, job,location, id) {\n    const obj = {\n      name, number, job,location\n    };\n    this\n      .http\n      .post(`${this.api}/${id}`, obj)\n      .subscribe(res => console.log('Update Complete'));\n  }\n\n  deleteContact(id) {\n    return this\n              .http\n              .get(`${this.api}/${id}`);\n  }\n \n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst baseURL = 'http://localhost:3007/contacts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  readAll(): Observable<any> {\n    return this.httpClient.get(baseURL);\n  }\n\n  read(id): Observable<any> {\n    return this.httpClient.get(`${baseURL}/${id}`);\n  }\n\n  create(data): Observable<any> {\n    return this.httpClient.post(baseURL, data);\n  }\n\n  update(id, data): Observable<any> {\n    return this.httpClient.put(`${baseURL}/${id}`, data);\n  }\n\n  delete(id): Observable<any> {\n    return this.httpClient.delete(`${baseURL}/${id}`);\n  }\n\n  deleteAll(): Observable<any> {\n    return this.httpClient.delete(baseURL);\n  }\n\n  searchByName(name): Observable<any> {\n    return this.httpClient.get(`${baseURL}?name=${name}`);\n  }\n}","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpHeaders} from \"@angular/common/http\";\nimport Users from '../models/Usesrs.model';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  api = \"http://localhost:3007/users/\"\n\n  constructor(private http:HttpClient) { }\n\n  addUser(username,email,password){\n    //call api\n    \n    const user ={\n      username:username,\n      email:email,\n      password:password\n    };\n\n    return this.http.post(this.api+\"user\",user,{}).toPromise();\n\n  }\n\n  login(username,password){\n    //call api\n    let headersVal = new HttpHeaders()\n    .set(\"username\",username)\n    .set(\"password\",password);\n    return this.http.get(this.api+\"login\",{headers:headersVal}).toPromise();\n    \n  }\n  allUsers(){\n    let headersVal = new HttpHeaders()\n    .set(\"x-auth-token\",localStorage.getItem(\"token\"));\n    \n    return this.http.get<Users[]>(this.api+\"user\",{headers:headersVal}).toPromise();\n  }\n  \n}\n\n\n\n// this.http.post(api+\"user\",user,{}).subscribe(resp =>{\n    //   if(resp['success'] == true)\n    //   localStorage.setItem(\"token\",resp['token']);\n    //   else\n    //   console.log(resp);\n\n    // },err=>{\n    //   console.log(\"err=\");\n    //   console.log(\"err name :\" + err.name);\n\n    // })\n","import { Component, OnInit } from '@angular/core';\nimport{FormGroup,FormBuilder,Validators,FormControl} from '@angular/forms';\nimport{UsersService} from \"../services/users.service\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  signUpForm:FormGroup;\n  msg = new FormControl(\"\");\n  constructor(private fb:FormBuilder, private us:UsersService) {\n    this.createForm();\n   }\n\n   addUser(username,email,password){\n     //logic\n     this.us.addUser(username,email,password)\n     .then(resp=>{\n       if(resp['success']){\n         localStorage.setItem(\"token\",resp['token']);\n         this.msg.setValue(\"User Added Successfully\");\n         \n       }\n     }).catch(err=>{\n      this.msg.setValue(\"Error:\" + err.message);\n     })\n     \n\n   }\n\n\n   createForm(){\n     this.signUpForm = this.fb.group({\n       username :['',Validators.required],\n       email: ['',Validators.compose([\n         Validators.required,\n         Validators.email,\n         Validators.pattern(/^([a-zA-Z0-9\\.-]+)@([a-zA-Z\\.-]+)\\.([a-z]{2,6})$/)\n       ])],\n       password :['',Validators.compose([\n         Validators.required,\n         Validators.minLength(5),\n         Validators.pattern(/\\w{5,14}/)\n       ])],\n       confpassword :['',Validators.required],\n       \n\n     }); \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>signup for free</h2>\r\n<div class=\"card\" style=\"width: 100%;\">\r\n    <div class=\"card-body\">\r\n      <form [formGroup]=\"signUpForm\"><!--  [formGroup]=\"signUpForm\" -->\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Userame :</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"username\" \r\n          formControlName=\"username\" #username required>\r\n          <!-- <small id=\"nameHelp\" class=\"form-text text-muted\">plese enter your full name .</small> -->\r\n          <div *ngIf=\"signUpForm.controls['username'].invalid && (signUpForm.controls['username'].dirty || \r\n          signUpForm.controls['username'].touched)\" class=\"alert alert-info\">\r\n          username is required.\r\n        </div> \r\n\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email :</label>\r\n          <input type=\"email\" class=\"form-control\" id=\"email\" formControlName=\"email\" #email required>\r\n          <div *ngIf=\"signUpForm.controls['email'].invalid && (signUpForm.controls['email'].dirty || \r\n          signUpForm.controls['email'].touched)\" class=\"alert alert-info\">\r\n           <span *ngIf=\"signUpForm.controls['email'].errors.required\">Email is required</span>\r\n           <span *ngIf=\"signUpForm.controls['email'].errors.email\">please enter valid Email</span>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password :</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"password\" formControlName=\"password\" #password required>\r\n          <div *ngIf=\"signUpForm.controls['password'].invalid && (signUpForm.controls['password'].dirty || \r\n          signUpForm.controls['password'].touched)\" class=\"alert alert-info\">\r\n           <span *ngIf=\"signUpForm.controls['password'].errors.required\">password is required</span>\r\n           <span *ngIf=\"signUpForm.controls['password'].errors.minlength\">password length must be min 5 at less</span>\r\n           <span *ngIf=\"signUpForm.controls['password'].errors.pattern\">password must be </span>\r\n        </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"confpassword\">Confirm Password :</label>\r\n          <input type=\"password\" class=\"form-control\" id=\"confpassword\" formControlName=\"confpassword\" #confpassword pattern=\"({{password.value}})\" required>\r\n          <div *ngIf=\"signUpForm.controls['confpassword'].invalid && (signUpForm.controls['confpassword'].dirty || \r\n          signUpForm.controls['confpassword'].touched)\" class=\"alert alert-info\">\r\n          <span *ngIf=\"signUpForm.controls['confpassword'].errors?.required\">confirm password is required </span> \r\n          <span *ngIf=\"signUpForm.controls['confpassword'].errors?.pattern\">\r\n            Paswords not match.</span>\r\n           \r\n        </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <input type=\"submit\" [disabled]=\"signUpForm.pristine || signUpForm.invalid\"  \r\n          class=\"form-control btn btn-primary\" value=\"Register\"\r\n          (click)=\"addUser(username.value,email.value,password.value)\"/>\r\n          <span class=\"alert-danger\">{{msg.value}}</span>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n  </div>\r\n  \r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}